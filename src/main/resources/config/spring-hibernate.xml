<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd" default-lazy-init="true">
    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"
                                  ignore-resource-not-found="false" />
    <!-- 配置c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${db.user}"></property>
        <property name="password" value="${db.password}"></property>
        <property name="driverClass" value="${db.driver}"></property>
        <property name="jdbcUrl" value="${db.url}"></property>
        <property name="initialPoolSize" value="${db.initialPoolSize}"></property>
        <property name="maxPoolSize" value="${db.maxPoolSize}"></property>
    </bean>

    <!--配置hibernate的SessionFactory实例,通过Spring提供的LocalSessionFactorybean进行配置  -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 配置数据源属性 -->
        <property name= "dataSource" ref="dataSource"></property>


        <!-- 配置hibernate.cfg.xml的位置及名称-->
        <!--<property name="configLocation" value="hibernate.cfg.xml"></property>-->

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>


      <!--  <property name="mappingResources">
            <value>classpath:hbm/userTest.hbm.xml</value>
        </property>-->
        <!-- 配置hibernate映射文件的位置及名称,可以使用通配符-->
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:hbm/userTest.hbm.xml</value>
            </list>
        </property>

        <property name="annotatedClasses">
            <list>
                <value>com.mello.spring.entity.User</value>
            </list>
        </property>
    </bean>
    <!-- 配置Spring的声明式事务 -->
    <!-- 1.配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!--&lt;!&ndash; 2.配置事务属性,需要事务管理器 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*"/>-->
            <!--<tx:method name="get*" read-only="true"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; 3.配置事务切点,并把切点和事务属性关联起来 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(* com.wang.service.*.*(..))" id="pointcut"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>-->
    <!--</aop:config>-->
</beans>